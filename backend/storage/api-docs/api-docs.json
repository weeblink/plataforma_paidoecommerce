{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation - Pai do Ecommerce",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/api": {},
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "m@exemplo.com",
                                    "password": "123456"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login Success"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiIxIn0"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "cpf": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "confirmPassword": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Maria",
                                    "cpf": "123.456.789-09",
                                    "email": "m@exemplo.com",
                                    "password": "123456",
                                    "confirmPassword": "123456"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Register Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/recover": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Forgot Password",
                "operationId": "9c8ece3d8d5aac67bcfb404587a9e7ec",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "m@exemplo.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Recover Password Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset Password",
                "operationId": "350036c6db899face502a3dbfa7cc15f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "confirmPassword": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "token": "123456",
                                    "password": "123456",
                                    "confirmPassword": "123456"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reset Password Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh_token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "operationId": "99346b229f0a439544312d18dfc47fdd",
                "responses": {
                    "200": {
                        "description": "Token refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/banners": {
            "get": {
                "tags": [
                    "Banners"
                ],
                "summary": "List all banners",
                "operationId": "e84c60427a3243254e27f718976c8ec6",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Banner"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Banner not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Banners"
                ],
                "summary": "Create a new banner",
                "operationId": "a36c370a984a18f6e0aa65f281e75884",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BannerCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Banner created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/banners/{id}": {
            "post": {
                "tags": [
                    "Banners"
                ],
                "summary": "Update a banner",
                "description": "Update a banner",
                "operationId": "42c3d6ae3373650da5e0e71d7ecab613",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banner ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BannerCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Banner updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Banner updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Banner not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Banners"
                ],
                "summary": "Delete a banner",
                "operationId": "1e975b0eac34ca24320c68dda34f4718",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banner ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Banner deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Banner not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/banners/swap-order": {
            "patch": {
                "tags": [
                    "Banners"
                ],
                "summary": "Swap banner order",
                "description": "Swap banner order",
                "operationId": "bf4215437b352223b2e3547fdf49a38f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "banner1_id": {
                                        "type": "string"
                                    },
                                    "banner2_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Banner order swapped successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Banner order swapped successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/classes/{moduleId}": {
            "post": {
                "tags": [
                    "Classes"
                ],
                "summary": "Create a new class",
                "description": "Create a new class",
                "operationId": "adec3c7513aadb657f583d66b5ae283c",
                "parameters": [
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Class name",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Class description",
                                        "type": "string"
                                    },
                                    "pv_video_id": {
                                        "description": "Embed from video",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Class created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Class created successfully"
                                        },
                                        "class_id": {
                                            "type": "string",
                                            "example": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/classes/{id}": {
            "put": {
                "tags": [
                    "Classes"
                ],
                "summary": "Update a class",
                "description": "Update a class",
                "operationId": "c7251b56ed66519d11a456a334b6bb5c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Class ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassCreateAndUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Class updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Class updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Class updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while updating class."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Classes"
                ],
                "summary": "Delete a class",
                "description": "Delete a class",
                "operationId": "faf9f7b186353d6172e44360069e83c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Class ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Class deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Class deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Class deleted error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error ocourred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/classes/swap-order": {
            "patch": {
                "tags": [
                    "Classes"
                ],
                "summary": "Swap class order",
                "description": "Swap class order",
                "operationId": "a282386287be112532a9425e1d432098",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "class1_id": {
                                        "type": "integer"
                                    },
                                    "class2_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "class1_id": 1,
                                    "class2_id": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Class order swapped successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Class order swapped successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/connections": {
            "get": {
                "tags": [
                    "Connections"
                ],
                "summary": "List all connections",
                "operationId": "dc19e905ff319d367073d0a6854a107a",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "My Connection"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error has occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Connections"
                ],
                "summary": "Create a new connection",
                "operationId": "547d2e0fb8cdfe90e07b1a936ed12574",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Connection"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "connection_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error has occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/connections/{id}": {
            "delete": {
                "tags": [
                    "Connections"
                ],
                "summary": "Delete a specific connection",
                "description": "Deletes a connection from the database based on the provided ID",
                "operationId": "1a5c3aec26663b9d55be12a953a37065",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the connection to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Connection deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Connection not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Connection not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error has occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{id}/qr-code": {
            "post": {
                "tags": [
                    "Connections"
                ],
                "summary": "Generate QR Code for a specific connection",
                "description": "Generates a QR code for a connection identified by ID",
                "operationId": "f3c6fd5f191b65bfba46f56a8839c369",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Connection ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Qr Code generated correctly"
                                        },
                                        "qrcode": {
                                            "type": "string",
                                            "example": "data:image/png;base64,..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Connection not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Connection not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error has occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "List all courses",
                "operationId": "bee135566d809d7424715052ee4aff0e",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "message": {
                                                "type": "string",
                                                "example": "success"
                                            },
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/CourseUserList"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/courses/{id}": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Get course by id",
                "operationId": "f30533c37c15a4398da5b2f686e0cba1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/courses/{classId}/watched": {
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Mark class as watched",
                "operationId": "c9f74c797a9afef6665026ca77adfa26",
                "parameters": [
                    {
                        "name": "classId",
                        "in": "path",
                        "description": "ID of the class",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Class marked as watched"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Class not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/courses/{classId}/not-watched": {
            "post": {
                "tags": [
                    "Course"
                ],
                "summary": "Mark class as not watched",
                "operationId": "e70365f9e5a4f6a5f338852ab93bbb75",
                "parameters": [
                    {
                        "name": "classId",
                        "in": "path",
                        "description": "ID of the class",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Class marked as not watched"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/courses-management": {
            "get": {
                "tags": [
                    "Course Management"
                ],
                "summary": "List all courses",
                "operationId": "62f7d0838886e4a2374859d93912c7b4",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Course"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Course Management"
                ],
                "summary": "Create a new course",
                "description": "Create a new course",
                "operationId": "6ebfb358e84adb23d109f672d838d898",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseManagement"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course created successfully"
                                        },
                                        "course_id": {
                                            "type": "string",
                                            "example": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/courses-management/{id}": {
            "get": {
                "tags": [
                    "Course Management"
                ],
                "summary": "List one course",
                "description": "List one course",
                "operationId": "0910be8abb4e1177fe4d3bd56c3cc393",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Course not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Course Management"
                ],
                "summary": "Delete a course",
                "description": "Delete a course",
                "operationId": "819c1f8b2ec00256cca32bd9a2795bb6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/courses-management/update/{id}": {
            "post": {
                "tags": [
                    "Course Management"
                ],
                "summary": "Update a course",
                "description": "Update a course",
                "operationId": "7eb33722308b7dba5cdc4e7874ec2c65",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseManagement"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Course updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/attachments/{class_id}": {
            "get": {
                "tags": [
                    "Classes Attachments"
                ],
                "summary": "List all Attachments",
                "description": "List all Attachments",
                "operationId": "4028f5c717265faf733c8c1cbcdf0150",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "description": "Classe ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "9d473bbf-1af4-429d-abf6-2f791515f664"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Arquivo 01"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "example": "http://localhost:8000/storage/courses/attachments/9d473bbf-1af4-429d-abf6-2f791515f664/Arquivo_01.pdf"
                                                    },
                                                    "size": {
                                                        "type": "number",
                                                        "example": 1.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Class not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Classes Attachments"
                ],
                "summary": "Save new Attachment for Classe",
                "description": "Save new Attachment for Classe",
                "operationId": "2befcfb98e3437c1d65207c8b28f0fdb",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "description": "Classe ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "schema": "CourseAttachment",
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "File",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "title": "Arquivo 01",
                                    "file": "<binary>"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File added successfully"
                                        },
                                        "attachment_id": {
                                            "type": "string",
                                            "example": "9d473bbf-1af4-429d-abf6-2f791515f664"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Class not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/attachments/{attachment_id}": {
            "delete": {
                "tags": [
                    "Classes Attachments"
                ],
                "summary": "Delete Attachment",
                "description": "Delete Attachment",
                "operationId": "dc4b257626d70b2d8ebbdf7bf4ea3de6",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "description": "Classe ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Attachment has been deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Attachment not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/config": {
            "post": {
                "tags": [
                    "Credentials"
                ],
                "summary": "Configura credenciais de checkout",
                "description": "Recebe credenciais e as configura para o sistema de checkout",
                "operationId": "configureCredentials",
                "requestBody": {
                    "description": "Dados de configuração das credenciais",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "app_name",
                                    "app_id",
                                    "token",
                                    "cliente_id",
                                    "cliente_secret",
                                    "expires_in"
                                ],
                                "properties": {
                                    "app_name": {
                                        "description": "Nome do aplicativo",
                                        "type": "string"
                                    },
                                    "app_id": {
                                        "description": "ID do aplicativo",
                                        "type": "string"
                                    },
                                    "token": {
                                        "description": "Token de autenticação",
                                        "type": "string"
                                    },
                                    "cliente_id": {
                                        "description": "ID do cliente",
                                        "type": "string"
                                    },
                                    "cliente_secret": {
                                        "description": "Segredo do cliente",
                                        "type": "string"
                                    },
                                    "expires_in": {
                                        "description": "Tempo de expiração do token em segundos",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Credenciais salvas com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "credentials saved"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao configurar as credenciais",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while trying to check if credentials are correct."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Credentials"
                ],
                "summary": "List all credentials",
                "description": "return list of all credentials saved",
                "operationId": "listAllCredentials",
                "responses": {
                    "200": {
                        "description": "Credenciais listadas com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "credentials finded"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "app_name": {
                                                        "type": "string",
                                                        "example": "MeuApp"
                                                    },
                                                    "app_id": {
                                                        "type": "string",
                                                        "example": "123456"
                                                    },
                                                    "token": {
                                                        "type": "string",
                                                        "example": "abcdef123456"
                                                    },
                                                    "cliente_id": {
                                                        "type": "string",
                                                        "example": "cliente123"
                                                    },
                                                    "cliente_secret": {
                                                        "type": "string",
                                                        "example": "secret123"
                                                    },
                                                    "expires_in": {
                                                        "type": "string",
                                                        "example": "2024-11-13 12:00:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro ao listar credenciais",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while trying to list all credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/student": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get student dashboard",
                "operationId": "8c9f49524024ea30ee17bafde8c1b5b1",
                "responses": {
                    "200": {
                        "description": "Student dashboard",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardStudent"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/dashboard/admin": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get admin dashboard",
                "operationId": "1b19b7906ce3cd3a3b914b44e0a4d52f",
                "responses": {
                    "200": {
                        "description": "Admin dashboard",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardAdmin"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/email-marketing/send": {
            "post": {
                "tags": [
                    "Email Marketing"
                ],
                "summary": "Send new email marketing",
                "description": "Send new email marketing to Leads",
                "operationId": "b73c7d8156270d37f7edd74cfba9d331",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "schema": "EmailMarketing",
                                "properties": {
                                    "broadcast": {
                                        "type": "boolean"
                                    },
                                    "contacts": {
                                        "type": "json"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "type_action": {
                                        "type": "string"
                                    },
                                    "link": {
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "File",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "broadcast": true,
                                    "contacts": "[]",
                                    "message": "Mensagem de teste",
                                    "type_action": "link",
                                    "link": "https://imperiumdigital.com.br",
                                    "file": null
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully scheduled email sending"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/email-marketing/{email_id}": {
            "delete": {
                "tags": [
                    "Email Marketing"
                ],
                "summary": "Remove a scheduled email",
                "description": "Deletes an email scheduled for sending by its ID",
                "operationId": "a220c1e4ab9d58db14bda7bc27e43c0d",
                "parameters": [
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "ID of the email to be deleted",
                        "required": true,
                        "schema": {
                            "type": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email sending removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email sending removed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not founded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Email not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/email-marketing/metrics/{email_id}": {
            "get": {
                "tags": [
                    "Emails"
                ],
                "summary": "Get metrics for a specific email",
                "description": "Retrieves metrics for the specified email marketing campaign by its ID.",
                "operationId": "getEmailMetrics",
                "parameters": [
                    {
                        "name": "email_id",
                        "in": "path",
                        "description": "ID of the email marketing campaign",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metrics founded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "metrics founded"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "9d67237d-5564-4311-b64f-7d67fa62407c"
                                                },
                                                "broadcast": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Email final! 3"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "essa é um email de teste"
                                                },
                                                "contacts_count": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "scheduled": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "schedule_time": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "type_action": {
                                                    "type": "string",
                                                    "example": "link"
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "example": "https://imperiumdigital.com.br"
                                                },
                                                "file_url": {
                                                    "type": "string",
                                                    "example": ""
                                                },
                                                "leads_seen": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "email": {
                                                                "type": "string",
                                                                "example": "asarmond82@gmail.com"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Arthur Souza Armond"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Email not founded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/extras/{id}/payment": {
            "get": {
                "tags": [
                    "Extras"
                ],
                "summary": "Get extra product payment data",
                "description": "Retrieves payment information for a specific extra product if the user doesn't already have access",
                "operationId": "5e725def8e00ad4269fe0a47b7de55a6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Extra Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "description": "Payment data for the extra product",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User already has access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User already has access to this extra product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Extra not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Extra not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/extras": {
            "get": {
                "tags": [
                    "Extras"
                ],
                "summary": "List all extra products",
                "description": "Retrieves all extra products available for the authenticated user",
                "operationId": "ab8243d240a8c5a12e4b5ae9eacd35ea",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Products founded successfully"
                                        },
                                        "data": {
                                            "description": "List of extra products",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/extras/{id}/get-file": {
            "get": {
                "tags": [
                    "Extras"
                ],
                "summary": "Download extra product file",
                "description": "Downloads the file associated with a specific extra product for the authenticated user",
                "operationId": "51f69d1e89a22fd25d3653b928723096",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the extra product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved file",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User hasn't purchased the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "O usuário ainda não comprou o produto"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid file path format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Formato do caminho do arquivo inválido"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - File does not exist"
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/extras/{id}": {
            "get": {
                "tags": [
                    "Extras"
                ],
                "summary": "Get specific extra product",
                "description": "Retrieves a specific extra product for the authenticated user",
                "operationId": "a7671cf2893a0262fd179db7cc43c005",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the extra product",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Extra products founded successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ExtraExibition"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User hasn't purchased the product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "O usuário ainda não comprou o produto"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/extras-management": {
            "get": {
                "tags": [
                    "Extras"
                ],
                "summary": "List all extras",
                "operationId": "b1501665adb91d6bc083b17c2c5f208d",
                "responses": {
                    "200": {
                        "description": "List of extras",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExtraManagement"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Extras"
                ],
                "summary": "Create a new extra",
                "operationId": "64b5706ff0f4f9839d67c119a8212abe",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtraCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Extra created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Extra created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/extras-management/{id}": {
            "post": {
                "tags": [
                    "Extras"
                ],
                "summary": "Update an extra",
                "operationId": "765e05ce1dd4ca96c77e2536f1570b18",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Banner ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtraCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Extra updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Extra updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Extras"
                ],
                "summary": "Delete an extra",
                "operationId": "26edeabbafa8d2238ba96b1459c099bd",
                "responses": {
                    "200": {
                        "description": "Extra deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Extra deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/leads": {
            "get": {
                "tags": [
                    "Leads"
                ],
                "summary": "List all leads",
                "description": "List all leads",
                "operationId": "9bff2c75c0edb2ad55aec6fc2271146a",
                "responses": {
                    "200": {
                        "description": "List of leads",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Lead"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/meet/schedule": {
            "get": {
                "tags": [
                    "Meet Schedules"
                ],
                "summary": "List all meet schedules",
                "operationId": "4a06c7037515917fc082c8bd32ccf9b0",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MeetScheduleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Meet schedules not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Meet Schedules"
                ],
                "summary": "Create Meet Schedule for a group",
                "operationId": "41f3a9196afb0d9f4d6818cd602b5834",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeetScheduleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Meet Schedule created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Meet Schedule created successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MeetScheduleResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/meet/schedule/mark-as-unavailable/{id}": {
            "patch": {
                "tags": [
                    "Meet Schedules"
                ],
                "summary": "Mark a meet schedule as unavailable",
                "operationId": "0e093d79db390e6adceb8f56836925ec",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the meet schedule to mark as unavailable",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meet schedule successfully marked as unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Meet schedule marked as unavailable"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Meet schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/meet/schedule/mark-as-present/{id}": {
            "patch": {
                "tags": [
                    "Meet Schedules"
                ],
                "summary": "Mark a meet schedule as present",
                "operationId": "0d95a20ea500ab36649562fa7e190ed0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the meet schedule to mark as present",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Meet schedule successfully marked as present",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Meet schedule marked as present"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Meet schedule or student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/meet/schedule/{id}": {
            "delete": {
                "tags": [
                    "Meet Schedules"
                ],
                "summary": "Delete a meet schedule",
                "operationId": "2c6d1d2a1c3c5d40ddcec9a949e3f521",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Calendar time ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Meet schedule deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Meet schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentorings": {
            "get": {
                "tags": [
                    "Mentorings"
                ],
                "summary": "List all mentorings",
                "operationId": "5d97d3fa4ddf6ace703dba7c2ab78e03",
                "responses": {
                    "200": {
                        "description": "List of mentorings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MentoringGroupExibition"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentorings/{id}/payment": {
            "get": {
                "tags": [
                    "Mentorings"
                ],
                "summary": "Get mentorship group payment data",
                "description": "Retrieves payment information for a specific mentorship group if the user doesn't already have access",
                "operationId": "f2ae218ac3000cfdee92da1bcb51f93b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mentorship Group ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "description": "Payment data for the mentorship group",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "User already has access to this mentorship",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User already has access to this mentorship"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Group not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentorings/{group_id}": {
            "get": {
                "tags": [
                    "Mentorings"
                ],
                "summary": "Get meet schedules with mentoring details",
                "description": "Retrieve meet schedules with mentoring details, including mentor information and student schedules.",
                "operationId": "945bb376b80a7e185dc403bcd1b19d22",
                "parameters": [
                    {
                        "name": "group_id",
                        "in": "path",
                        "description": "The ID of the mentoring group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mentoring schedule retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring groups founded"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "example": "group_001"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Group Mentoring Schedule"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 199.99
                                                },
                                                "promotional_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 149.99
                                                },
                                                "qnt_students": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "purchase_deadline": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-12-31T23:59:59Z"
                                                },
                                                "expiration_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-12-31T23:59:59Z"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "mentoring"
                                                },
                                                "mentorship": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "mentorship_001"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Advanced Mentorship Program"
                                                        },
                                                        "image_url": {
                                                            "type": "string",
                                                            "example": "https://example.com/images/mentorship.jpg"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T12:00:00Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-06-01T12:00:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "course": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "course_001"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Mastering Programming"
                                                        },
                                                        "price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 299.99
                                                        },
                                                        "promotional_price": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 199.99
                                                        },
                                                        "qnt_class": {
                                                            "type": "integer",
                                                            "example": 30
                                                        },
                                                        "qnt_students": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "image_url": {
                                                            "type": "string",
                                                            "example": "https://example.com/images/course.jpg"
                                                        },
                                                        "is_pay": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-01-01T12:00:00Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2024-06-01T12:00:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "last_class": {
                                                    "$ref": "#/components/schemas/CourseClass"
                                                },
                                                "schedules_individual": {
                                                    "description": "Schedules for individual mentoring sessions",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "schedule_001"
                                                            },
                                                            "start_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "08:00"
                                                            },
                                                            "end_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "10:00"
                                                            },
                                                            "student": {
                                                                "properties": {
                                                                    "student_id": {
                                                                        "type": "string",
                                                                        "example": "student_001"
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "John Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "schedules_groups": {
                                                    "description": "Schedules for group mentoring sessions",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "schedule_002"
                                                            },
                                                            "start_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "14:00"
                                                            },
                                                            "end_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "16:00"
                                                            },
                                                            "students": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "student_id": {
                                                                            "type": "string",
                                                                            "example": "student_002"
                                                                        },
                                                                        "name": {
                                                                            "type": "string",
                                                                            "example": "Jane Doe"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "progress": {
                                                    "description": "Details of the user's progress in the mentoring group",
                                                    "properties": {
                                                        "completed_classes": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total_classes": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "percentage": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 50
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mentoring schedules not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring schedules not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentorings/{id}/groups": {
            "get": {
                "tags": [
                    "Mentorings"
                ],
                "summary": "Get mentorship groups",
                "description": "Retrieves all groups associated with a specific mentorship for the authenticated user",
                "operationId": "392f49ee108bb01475a662d521173923",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mentorship ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved mentoring groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring groups founded"
                                        },
                                        "data": {
                                            "description": "List of mentorship groups",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error ocourred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/group-management/{id}": {
            "get": {
                "tags": [
                    "Mentoring Group Management"
                ],
                "summary": "List all group by mentoring",
                "operationId": "6116072687e385ccee4500d5eb1ae81a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mentorship ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of group by mentoring",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MentoringGroupManagement"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Mentoring Group Management"
                ],
                "summary": "Update a group",
                "operationId": "d6e54cf1f740d6d6c2e66c96337e1d73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MentoringGroupCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group updated"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Mentoring Group Management"
                ],
                "summary": "Delete a group",
                "operationId": "fa7b51af25074d77a4fb0ebe7bcfcef1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/group-management": {
            "post": {
                "tags": [
                    "Mentoring Group Management"
                ],
                "summary": "Create a group",
                "operationId": "e88501b45d7086db4a830d3f92f09beb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MentoringGroupCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring-management": {
            "get": {
                "tags": [
                    "Mentoring Management"
                ],
                "summary": "List all mentorings",
                "operationId": "175f824ea071d6981639ec0252cd61e3",
                "responses": {
                    "200": {
                        "description": "List of mentorings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MentoringManagement"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Mentoring Management"
                ],
                "summary": "Create a new mentoring",
                "operationId": "c566e91c0958e10f66e2943ff161d2f3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MentoringCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mentoring created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring-management/{id}": {
            "post": {
                "tags": [
                    "Mentoring Management"
                ],
                "summary": "Update a mentoring",
                "operationId": "64def88874599399e9d31ce15f6b875b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mentorship ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MentoringCreateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mentoring updated"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Mentoring Management"
                ],
                "summary": "Delete a mentoring",
                "operationId": "469ca75a8145f427eb57698d753e47c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Mentorship ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mentoring deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/schedule": {
            "get": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "List all calendar times",
                "operationId": "ce6e2dad0d027e48f3206d935ccdbb5c",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MentoringScheduleResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Calendar Time not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "Create admin Mentoring Schedules",
                "operationId": "a606d29683f7d10a41470e5efaddcb0a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MentoringScheduleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mentoring Schedule created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring Schedule created successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MentoringScheduleResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/schedule/calendar": {
            "get": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "Get all scheduled meetings for the admin user",
                "description": "Retrieves a list of all scheduled meetings including individual and group meetings",
                "operationId": "15121fc63ac21bb10e82f87359502a3b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Meeting with John"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Weekly progress review"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "example": "25/12/2024"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "example": "14:30"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "example": "15:30"
                                                    },
                                                    "mentoring_title": {
                                                        "type": "string",
                                                        "example": "Advanced Python Course",
                                                        "nullable": true
                                                    },
                                                    "group": {
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Group A",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "students": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string",
                                                                    "example": "123e4567-e89b-12d3-a456-426614174000"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "John Doe"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "individual",
                                                            "group"
                                                        ],
                                                        "example": "individual"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/schedule/groups": {
            "get": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "Get all groups",
                "description": "Retrieves a list of all groups to schedule",
                "operationId": "fd180786016f2a9173f137d95d1eed6c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Groups founded successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "example": "4c21abb9-6f43-4f6a-b866-00d40948b763"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Grupo 01"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/schedule/create/groups": {
            "post": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "Create Mentoring Schedule for a group",
                "operationId": "e4935a3cba54181f566126712f5d7786",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MentoringScheduleGroupRequest"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mentoring group schedule created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring group schedule created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "details": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/mentoring/schedule/{id}": {
            "post": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "Update Mentoring Schedule for a group",
                "operationId": "5a75144ba8678830151f134493c60b23",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Calendar ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MentoringScheduleUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mentoring Schedule updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring Schedule created successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MentoringScheduleResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Mentoring Schedules"
                ],
                "summary": "Delete all mentoring schedules by calendar id",
                "operationId": "4eb3f4fe2a3f9919b9f3b3e0500104d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Calendar ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mentoring schedule deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Mentoring schedule not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/modules/{course_id}": {
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Create a new module",
                "description": "Create a new module",
                "operationId": "fa38d654ff74155c0deb1f7be7215607",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "title": "Módulo 01"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Module created successfully"
                                        },
                                        "module_id": {
                                            "type": "string",
                                            "example": "uuid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/modules/{id}": {
            "put": {
                "tags": [
                    "Modules"
                ],
                "summary": "Update a module",
                "description": "Update a module",
                "operationId": "81fbaa282c2a7a91972b2f62cc5eaaf6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseModulesUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Module updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Modules"
                ],
                "summary": "Delete a module",
                "description": "Delete a module",
                "operationId": "4e31a29e97e46298e16e42b8d11d7adb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Module deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/modules/swap-order": {
            "patch": {
                "tags": [
                    "Modules"
                ],
                "summary": "Swap module order",
                "description": "Swap module order",
                "operationId": "cb0894c0a18eaa7e3c010641309e75bf",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module1_id": {
                                        "type": "integer"
                                    },
                                    "module2_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "module1_id": 1,
                                    "module2_id": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module order swapped successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Module order swapped successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/participants/count": {
            "get": {
                "tags": [
                    "Participants"
                ],
                "summary": "Get total count of participants",
                "description": "Returns the total number of participants in the system",
                "operationId": "fb9d1334c6297aa368371d23e0730517",
                "responses": {
                    "200": {
                        "description": "Participants count retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Count participants get successfully"
                                        },
                                        "qnt_participants": {
                                            "type": "integer",
                                            "example": 100
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occourred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments/create": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Cria um novo pagamento",
                "operationId": "createPayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "phone",
                                    "email",
                                    "document_type",
                                    "document_number",
                                    "order",
                                    "card",
                                    "address"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "minLength": 15
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "document_type": {
                                        "type": "string",
                                        "enum": [
                                            "cpf",
                                            "cnpj"
                                        ]
                                    },
                                    "document_number": {
                                        "type": "string"
                                    },
                                    "order": {
                                        "required": [
                                            "product_id",
                                            "discount_value",
                                            "shipping_value",
                                            "type_payment",
                                            "type_product"
                                        ],
                                        "properties": {
                                            "product_id": {
                                                "type": "integer"
                                            },
                                            "discount_value": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "shipping_value": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "type_payment": {
                                                "type": "string",
                                                "enum": [
                                                    "credit_card",
                                                    "invoice",
                                                    "pix"
                                                ]
                                            },
                                            "type_product": {
                                                "type": "string",
                                                "enum": [
                                                    "course",
                                                    "extra",
                                                    "mentorship"
                                                ]
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "card": {
                                        "properties": {
                                            "number": {
                                                "type": "string",
                                                "maxLength": 16,
                                                "minLength": 16
                                            },
                                            "cvv": {
                                                "type": "string",
                                                "maxLength": 3,
                                                "minLength": 3
                                            },
                                            "expiration_month": {
                                                "type": "string",
                                                "maxLength": 2,
                                                "minLength": 2
                                            },
                                            "expiration_year": {
                                                "type": "string",
                                                "maxLength": 2,
                                                "minLength": 2
                                            },
                                            "holder_document_number": {
                                                "type": "string",
                                                "maxLength": 14,
                                                "minLength": 11
                                            },
                                            "holder_name": {
                                                "type": "string"
                                            },
                                            "installments": {
                                                "type": "integer",
                                                "maximum": 12,
                                                "minimum": 1
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "address": {
                                        "required": [
                                            "postcode",
                                            "street",
                                            "number",
                                            "district",
                                            "city",
                                            "state"
                                        ],
                                        "properties": {
                                            "postcode": {
                                                "type": "string",
                                                "maxLength": 8,
                                                "minLength": 8
                                            },
                                            "street": {
                                                "type": "string"
                                            },
                                            "number": {
                                                "type": "string"
                                            },
                                            "complement": {
                                                "type": "string"
                                            },
                                            "district": {
                                                "type": "string"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string",
                                                "maxLength": 2
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pagamento criado com sucesso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "payment_id": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro inesperado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ocorreu um erro inesperado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/payments/{payment_id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Obtém os dados de um pagamento específico",
                "operationId": "getPaymentData",
                "parameters": [
                    {
                        "name": "payment_id",
                        "in": "path",
                        "description": "ID do pagamento",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do pagamento",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "pix_code": {
                                                    "type": "string"
                                                },
                                                "pix_qrcode": {
                                                    "type": "string"
                                                },
                                                "pix_expiration": {
                                                    "type": "string"
                                                },
                                                "invoice_digitable": {
                                                    "type": "string"
                                                },
                                                "invoice_code": {
                                                    "type": "string"
                                                },
                                                "invoice_link": {
                                                    "type": "string"
                                                },
                                                "invoice_expiration": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pagamento não encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "O pagamento não existe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Acesso negado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Você não tem permissão para acessar esta página"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erro inesperado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ocorreu um erro inesperado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/payments/{app_name}/status": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Atualiza o status de um pagamento via webhook",
                "operationId": "updateStatusPayment",
                "parameters": [
                    {
                        "name": "app_name",
                        "in": "path",
                        "description": "Nome do aplicativo que está enviando a notificação",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status de pagamento atualizado com sucesso"
                    },
                    "500": {
                        "description": "Erro inesperado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ocorreu um erro inesperado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/profile/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Edit profile",
                "description": "Edit profile",
                "operationId": "1e4681be2cfca165c11cb808c07f0a7e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditProfile"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/profile": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get profile",
                "description": "Get profile of the authenticated user",
                "operationId": "d6377c5f405be54ca1b636de86e5bfd4",
                "responses": {
                    "200": {
                        "description": "Profile data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success data profile"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Arthur"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "31975547967"
                                                },
                                                "cpf": {
                                                    "type": "string",
                                                    "example": "99999999999"
                                                },
                                                "user_type": {
                                                    "type": "string",
                                                    "example": "ADMIN"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/user/{id}/products": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user's products",
                "description": "Retrieve a list of products associated with the user.",
                "operationId": "8f3b3c469b9898a83cc6ba0d50950667",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Product Name"
                                                    },
                                                    "price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 99.99
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/whatsapp-campaigns": {
            "get": {
                "tags": [
                    "WhatsApp Campaigns"
                ],
                "summary": "List all WhatsApp campaigns",
                "operationId": "listAllWhatsappCampaigns",
                "responses": {
                    "200": {
                        "description": "Campaigns retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign finded correctly"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occourred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whatsapp-campaigns/create": {
            "post": {
                "tags": [
                    "WhatsApp Campaigns"
                ],
                "summary": "Create a new WhatsApp campaign",
                "operationId": "createWhatsappCampaign",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "groups_id",
                                    "title",
                                    "msg1"
                                ],
                                "properties": {
                                    "groups_id": {
                                        "description": "Array of group IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "title": {
                                        "description": "Campaign title",
                                        "type": "string"
                                    },
                                    "msg1": {
                                        "description": "First message content",
                                        "type": "string"
                                    },
                                    "msg2": {
                                        "description": "Second message content",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "msg3": {
                                        "description": "Third message content",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "msg4": {
                                        "description": "Fourth message content",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "msg5": {
                                        "description": "Fifth message content",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Campaign created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occourred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/whatsapp-groups/count": {
            "get": {
                "tags": [
                    "WhatsappGroups"
                ],
                "summary": "Get total count of WhatsApp groups",
                "description": "Returns the total number of WhatsApp groups in the system",
                "operationId": "f4f13e7e95faf74d1995056812702cbe",
                "responses": {
                    "200": {
                        "description": "Groups count retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Groups count get successfully"
                                        },
                                        "qnt_groups": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error has occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserProfile": {
                "required": [
                    "name",
                    "cpf",
                    "user_type",
                    "phone",
                    "token"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "user_type": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BannerCreateUpdate": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "alt": {
                        "type": "string"
                    },
                    "image_url": {
                        "description": "Image of the banner",
                        "type": "string",
                        "format": "binary"
                    },
                    "link_action": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "title": "Curso de PHP",
                    "alt": "Curso de PHP",
                    "link_action": "http://localhost:8000/courses/1"
                }
            },
            "Banner": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "alt": {
                        "type": "string"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "link_action": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "example": {
                    "title": "Curso de PHP",
                    "alt": "Curso de PHP",
                    "image_url": "http://localhost:8000/storage/banners/banner1.jpg",
                    "link_action": "http://localhost:8000/courses/1",
                    "position": 1
                }
            },
            "ClassCreateAndUpdate": {
                "required": [
                    "title",
                    "description",
                    "pv_video_id"
                ],
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "pv_video_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CourseUserList": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "isLocked": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CourseClassFile": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "class_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CourseClass": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "module_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "views": {
                        "type": "integer"
                    },
                    "sequence": {
                        "type": "integer"
                    },
                    "pv_video_id": {
                        "type": "string"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CourseClassFile"
                        }
                    }
                },
                "type": "object"
            },
            "CourseModule": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "course_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "integer"
                    },
                    "qtd_timeclass": {
                        "type": "integer"
                    },
                    "qtd_classes": {
                        "type": "integer"
                    },
                    "classes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CourseClass"
                        }
                    }
                },
                "type": "object"
            },
            "Course": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "promotional_price": {
                        "type": "number"
                    },
                    "qnt_classes": {
                        "type": "integer"
                    },
                    "qnt_students": {
                        "type": "integer"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CourseModule"
                        }
                    }
                },
                "type": "object"
            },
            "CourseManagement": {
                "properties": {
                    "hs_identifier": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "promotional_price": {
                        "type": "number"
                    },
                    "thumbnail": {
                        "description": "Thumbnail image of the course",
                        "type": "string",
                        "format": "binary"
                    },
                    "is_pay": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "example": {
                    "title": "Curso de PHP",
                    "price": 100,
                    "promotional_price": 50
                }
            },
            "DashboardStudent": {
                "properties": {
                    "courses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CourseUserList"
                        }
                    },
                    "banners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Banner"
                        }
                    },
                    "mentorings_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MentoringGroupExibition"
                        }
                    },
                    "extras": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExtraExibition"
                        }
                    }
                },
                "type": "object"
            },
            "DashboardAdmin": {
                "properties": {
                    "course_active_statistics": {
                        "properties": {
                            "active_courses": {
                                "type": "integer"
                            },
                            "courses_added_this_month": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "leads_statistics": {
                        "properties": {
                            "leads_added_this_month": {
                                "type": "integer"
                            },
                            "total_leads": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "extra_statistics": {
                        "properties": {
                            "extras_added_this_month": {
                                "type": "integer"
                            },
                            "total_extras": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "mentorship_statistics": {
                        "properties": {
                            "mentorships_added_this_month": {
                                "type": "integer"
                            },
                            "total_mentorships": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "leads_per_month": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "total": {
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "last_five_sales": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "sale_id": {
                                    "type": "integer"
                                },
                                "user_name": {
                                    "type": "string"
                                },
                                "user_email": {
                                    "type": "string"
                                },
                                "product_price": {
                                    "type": "number",
                                    "format": "float"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "last_month_sales_count": {
                        "type": "integer"
                    },
                    "students_per_mentorship": {
                        "properties": {
                            "config": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "0": {
                                        "type": "string",
                                        "property": "label"
                                    }
                                }
                            },
                            "data": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "students_per_course": {
                        "properties": {
                            "config": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "0": {
                                        "type": "string",
                                        "property": "label"
                                    }
                                }
                            },
                            "data": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    },
                    "extra_sales_monthly": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "month": {
                                    "type": "string"
                                }
                            },
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "ExtraExibition": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "promotional_price": {
                        "type": "integer"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "file_url": {
                        "type": "string"
                    },
                    "is_locked": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "id": "1",
                    "title": "Curso de PHP",
                    "price": 100,
                    "promotional_price": 50,
                    "image_url": "http://localhost:8000/storage/banners/banner1.jpg",
                    "file_url": "http://localhost:8000/storage/files/file1.pdf",
                    "created_at": "2021-08-01 00:00:00"
                }
            },
            "ExtraCreateUpdate": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "promotional_price": {
                        "type": "integer"
                    },
                    "image_url": {
                        "description": "Image of the banner",
                        "type": "string",
                        "format": "binary"
                    },
                    "file_url": {
                        "description": "File of the extra",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object",
                "example": {
                    "title": "Curso de PHP",
                    "price": 100,
                    "promotional_price": 50
                }
            },
            "ExtraManagement": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "promotional_price": {
                        "type": "integer"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "file_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "id": "1",
                    "title": "Curso de PHP",
                    "price": 100,
                    "promotional_price": 50,
                    "image_url": "http://localhost:8000/storage/banners/banner1.jpg",
                    "file_url": "http://localhost:8000/storage/files/file1.pdf",
                    "created_at": "2021-08-01 00:00:00"
                }
            },
            "Lead": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "cpf": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "name": "João",
                    "email": "m@exemplo.com",
                    "phone": "123456789",
                    "cpf": "99999999999",
                    "created_at": "2021-09-01T12:00:00Z"
                }
            },
            "MeetScheduleRequest": {
                "required": [
                    "group_id",
                    "calendar_time_id",
                    "title",
                    "description"
                ],
                "properties": {
                    "group_id": {
                        "description": "ID of the group",
                        "type": "string"
                    },
                    "calendar_time_id": {
                        "description": "ID of the calendar time",
                        "type": "string"
                    },
                    "title": {
                        "description": "Title of the meet",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the meet",
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "group_id": "0e1ef5f5-4122-4d2c-b01a-fca411de7d33",
                    "calendar_time_id": "0e1ef5f5-4122-4d2c-b01a-fca411de7d33",
                    "title": "string",
                    "description": "string"
                }
            },
            "MeetScheduleResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "user": {
                            "description": "Mentor details",
                            "properties": {
                                "id": {
                                    "description": "User ID",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "User name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "date": {
                            "description": "Schedule date in YYYY-MM-DD format",
                            "type": "string",
                            "format": "date"
                        },
                        "times": {
                            "description": "List of available times",
                            "type": "array",
                            "items": {
                                "properties": {
                                    "id": {
                                        "description": "Calendar time ID",
                                        "type": "string"
                                    },
                                    "start_time": {
                                        "description": "Start time in HH:mm format",
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "end_time": {
                                        "description": "End time in HH:mm format",
                                        "type": "string",
                                        "format": "time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "type": "object"
                }
            },
            "MentoringGroupExibition": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "image_url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MentoringGroupExibitionDetails": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/MentoringGroupExibition"
                    },
                    {
                        "properties": {
                            "course": {
                                "$ref": "#/components/schemas/Course"
                            },
                            "last_class": {
                                "$ref": "#/components/schemas/CourseClass"
                            },
                            "mentorships": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MentoringScheduleGroupResponse"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "MentoringGroupCreateUpdate": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "course_id": {
                        "type": "string"
                    },
                    "mentorship_id": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "price_promotional": {
                        "type": "integer"
                    },
                    "purchase_deadline": {
                        "type": "string"
                    },
                    "expiration_date": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "group",
                            "single"
                        ]
                    }
                },
                "type": "object",
                "example": {
                    "title": "Curso de PHP",
                    "course_id": "1",
                    "mentorship_id": "1",
                    "price": 100,
                    "price_promotional": 50,
                    "purchase_deadline": "2021-08-01 00:00:00",
                    "expiration_date": "2021-08-01 00:00:00",
                    "type": "group"
                }
            },
            "MentoringGroupManagement": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "course_id": {
                        "type": "string"
                    },
                    "mentorship_id": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer"
                    },
                    "price_promotional": {
                        "type": "integer"
                    },
                    "qnt_students": {
                        "type": "integer"
                    },
                    "purchase_deadline": {
                        "type": "string"
                    },
                    "expiration_date": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "group",
                            "single"
                        ]
                    }
                },
                "type": "object",
                "example": {
                    "id": "1",
                    "title": "Curso de PHP",
                    "course_id": "1",
                    "mentorship_id": "1",
                    "price": 100,
                    "price_promotional": 50,
                    "qnt_students": 10,
                    "purchase_deadline": "2021-08-01 00:00:00",
                    "expiration_date": "2021-08-01 00:00:00",
                    "type": "group"
                }
            },
            "MentoringCreateUpdate": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "image_url": {
                        "description": "Image of the mentoring",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object",
                "example": {
                    "title": "Curso de PHP"
                }
            },
            "MentoringManagement": {
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "image_url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "id": "1",
                    "title": "Curso de PHP",
                    "image_url": "http://localhost:8000/storage/banners/banner1.jpg",
                    "created_at": "2021-08-01 00:00:00"
                }
            },
            "MentoringScheduleRequest": {
                "required": [
                    "dates"
                ],
                "properties": {
                    "dates": {
                        "description": "Array of dates and times",
                        "type": "array",
                        "items": {
                            "required": [
                                "date",
                                "times"
                            ],
                            "properties": {
                                "date": {
                                    "description": "Date in the format YYYY-MM-DD",
                                    "type": "string",
                                    "format": "date"
                                },
                                "times": {
                                    "description": "Array of time intervals",
                                    "type": "array",
                                    "items": {
                                        "required": [
                                            "start_time",
                                            "end_time"
                                        ],
                                        "properties": {
                                            "start_time": {
                                                "description": "Start time in the format HH:mm",
                                                "type": "string"
                                            },
                                            "end_time": {
                                                "description": "End time in the format HH:mm",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object",
                "example": {
                    "dates": [
                        {
                            "date": "12/12/2024",
                            "times": [
                                {
                                    "start_time": "08:00",
                                    "end_time": "10:00"
                                },
                                {
                                    "start_time": "14:00",
                                    "end_time": "16:00"
                                }
                            ]
                        },
                        {
                            "date": "13/12/2024",
                            "times": [
                                {
                                    "start_time": "09:00",
                                    "end_time": "11:00"
                                }
                            ]
                        }
                    ]
                }
            },
            "MentoringScheduleResponse": {
                "type": "array",
                "items": {
                    "properties": {
                        "id": {
                            "description": "Calendar ID",
                            "type": "string"
                        },
                        "user": {
                            "description": "User information",
                            "properties": {
                                "id": {
                                    "description": "User ID",
                                    "type": "string"
                                },
                                "username": {
                                    "description": "User name",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "date": {
                            "description": "Available date",
                            "type": "string",
                            "format": "date"
                        },
                        "times": {
                            "description": "List of available time slots",
                            "type": "array",
                            "items": {
                                "properties": {
                                    "id": {
                                        "description": "Calendar time ID",
                                        "type": "string"
                                    },
                                    "start_time": {
                                        "description": "Start time of the time slot",
                                        "type": "string",
                                        "format": "time"
                                    },
                                    "end_time": {
                                        "description": "End time of the time slot",
                                        "type": "string",
                                        "format": "time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "type": "object"
                }
            },
            "MentoringScheduleUpdateRequest": {
                "properties": {
                    "date": {
                        "description": "Date in format DD/MM/YYYY",
                        "type": "string",
                        "format": "date",
                        "example": "11/12/2024"
                    },
                    "times": {
                        "description": "Array of time intervals for the given date",
                        "type": "array",
                        "items": {
                            "properties": {
                                "start_time": {
                                    "description": "Start time in format HH:mm",
                                    "type": "string",
                                    "format": "time",
                                    "example": "08:00"
                                },
                                "end_time": {
                                    "description": "End time in format HH:mm",
                                    "type": "string",
                                    "format": "time",
                                    "example": "10:00"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "MentoringScheduleGroupResponse": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MentoringScheduleGroupRequest": {
                "required": [
                    "title",
                    "description",
                    "group_id",
                    "date",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Mentoria Grupo 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Mentoria sobre Laravel"
                    },
                    "group_id": {
                        "type": "string",
                        "example": "089f8e7f-c005-424d-a13f-1eedb0b45e39"
                    },
                    "date": {
                        "type": "string",
                        "example": "25/12/2024"
                    },
                    "start_time": {
                        "type": "string",
                        "example": "14:00"
                    },
                    "end_time": {
                        "type": "string",
                        "example": "15:00"
                    }
                },
                "type": "object"
            },
            "CourseModulesUpdate": {
                "properties": {
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PaymentRequest": {
                "properties": {
                    "first_name": {
                        "description": "Nome do cliente",
                        "type": "string",
                        "example": "João"
                    },
                    "last_name": {
                        "description": "Sobrenome do cliente",
                        "type": "string",
                        "example": "Silva"
                    },
                    "phone": {
                        "description": "Telefone do cliente (com DDD)",
                        "type": "string",
                        "maxLength": 15,
                        "minLength": 15,
                        "example": "11987654321"
                    },
                    "email": {
                        "description": "E-mail do cliente",
                        "type": "string",
                        "maxLength": 255,
                        "example": "joao.silva@example.com"
                    },
                    "document_type": {
                        "description": "Tipo do documento do cliente (CPF ou CNPJ)",
                        "type": "string",
                        "enum": [
                            "cpf",
                            "cnpj"
                        ],
                        "example": "cpf"
                    },
                    "document_number": {
                        "description": "Número do documento do cliente (CPF ou CNPJ)",
                        "type": "string",
                        "example": "12345678901"
                    },
                    "order": {
                        "description": "Detalhes do pedido",
                        "type": "array",
                        "items": {
                            "properties": {
                                "product_id": {
                                    "description": "ID do produto (curso, extra ou mentoria)",
                                    "type": "string",
                                    "example": "1"
                                },
                                "discount_value": {
                                    "description": "Valor do desconto",
                                    "type": "number",
                                    "example": 20
                                },
                                "shipping_value": {
                                    "description": "Valor do frete",
                                    "type": "number",
                                    "example": 10
                                },
                                "type_payment": {
                                    "description": "Tipo de pagamento",
                                    "type": "string",
                                    "enum": [
                                        "credit_card",
                                        "invoice",
                                        "pix"
                                    ],
                                    "example": "credit_card"
                                },
                                "type_product": {
                                    "description": "Tipo de produto",
                                    "type": "string",
                                    "enum": [
                                        "course",
                                        "extra",
                                        "mentorship"
                                    ],
                                    "example": "course"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "card": {
                        "description": "Detalhes do cartão de crédito",
                        "properties": {
                            "number": {
                                "description": "Número do cartão",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 16,
                                "example": "4111111111111111"
                            },
                            "cvv": {
                                "description": "Código de segurança do cartão",
                                "type": "string",
                                "maxLength": 3,
                                "minLength": 3,
                                "example": "123"
                            },
                            "expiration_month": {
                                "description": "Mês de validade do cartão",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "12"
                            },
                            "expiration_year": {
                                "description": "Ano de validade do cartão",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "23"
                            },
                            "holder_document_number": {
                                "description": "Número do documento do titular do cartão (CPF ou CNPJ)",
                                "type": "string",
                                "maxLength": 14,
                                "minLength": 11,
                                "example": "12345678901"
                            },
                            "holder_name": {
                                "description": "Nome do titular do cartão",
                                "type": "string",
                                "example": "João Silva"
                            },
                            "installments": {
                                "description": "Número de parcelas do pagamento",
                                "type": "integer",
                                "maximum": 12,
                                "minimum": 1,
                                "example": 6
                            }
                        },
                        "type": "object"
                    },
                    "address": {
                        "description": "Detalhes do endereço de cobrança",
                        "properties": {
                            "postcode": {
                                "description": "CEP do endereço",
                                "type": "string",
                                "maxLength": 8,
                                "minLength": 8,
                                "example": "12345678"
                            },
                            "street": {
                                "description": "Rua do endereço",
                                "type": "string",
                                "example": "Rua das Flores"
                            },
                            "number": {
                                "description": "Número do endereço",
                                "type": "string",
                                "example": "123"
                            },
                            "complement": {
                                "description": "Complemento do endereço (opcional)",
                                "type": "string",
                                "example": "Apto 101"
                            },
                            "district": {
                                "description": "Bairro do endereço",
                                "type": "string",
                                "example": "Centro"
                            },
                            "city": {
                                "description": "Cidade do endereço",
                                "type": "string",
                                "example": "São Paulo"
                            },
                            "state": {
                                "description": "Estado do endereço",
                                "type": "string",
                                "maxLength": 2,
                                "example": "SP"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EditProfile": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                },
                "type": "object",
                "example": {
                    "name": "João",
                    "phone": "123456789",
                    "password": "123456",
                    "confirmPassword": "123456"
                }
            },
            "UserProductRequest": {
                "properties": {
                    "user_id": {
                        "description": "ID do usuário",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Invalid input data"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "An unexpected error occurred"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Participants",
            "description": "API Endpoints for participants management"
        },
        {
            "name": "WhatsApp Campaigns",
            "description": "API Endpoints for WhatsApp campaign management"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Banners",
            "description": "Banners"
        },
        {
            "name": "Classes",
            "description": "Classes"
        },
        {
            "name": "Connections",
            "description": "Connections"
        },
        {
            "name": "Course",
            "description": "Course"
        },
        {
            "name": "Course Management",
            "description": "Course Management"
        },
        {
            "name": "Classes Attachments",
            "description": "Classes Attachments"
        },
        {
            "name": "Credentials",
            "description": "Credentials"
        },
        {
            "name": "Dashboard",
            "description": "Dashboard"
        },
        {
            "name": "Email Marketing",
            "description": "Email Marketing"
        },
        {
            "name": "Emails",
            "description": "Emails"
        },
        {
            "name": "Extras",
            "description": "Extras"
        },
        {
            "name": "Leads",
            "description": "Leads"
        },
        {
            "name": "Meet Schedules",
            "description": "Meet Schedules"
        },
        {
            "name": "Mentorings",
            "description": "Mentorings"
        },
        {
            "name": "Mentoring Group Management",
            "description": "Mentoring Group Management"
        },
        {
            "name": "Mentoring Management",
            "description": "Mentoring Management"
        },
        {
            "name": "Mentoring Schedules",
            "description": "Mentoring Schedules"
        },
        {
            "name": "Modules",
            "description": "Modules"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "WhatsappGroups",
            "description": "WhatsappGroups"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}